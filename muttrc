# A basic .muttrc for use with Gmail
# vim: set foldmethod=marker foldmarker={{,}} :

#source ~/.mutt/themes/mutt-colors-solarized/mutt-colors-solarized-dark-256.muttrc
source ~/.mutt/themes/tomorrow-night
#source ~/.mutt/themes/calmar.dark

# Basic Settings {{
set realname = "James N. V. Cash"
set from = "james.cash@occasionallycogent.com"
set editor = "vim +7"
unset help
unset move
# }}

# Reading mail settings {{
set mbox_type = Maildir
set folder = "~/Maildir"
set mask = "!^\\.[^.]"
set mbox = "+[Gmail]/All Mail"
set spoolfile = "+INBOX"
set postponed = "+[GMail].Drafts"
set record = "+[GMail].Sent Mail"
mailboxes +INBOX
# }}

# Sending mail settings {{
set sendmail = /usr/local/bin/msmtp
# }}

# Local server settings {{
set header_cache=~/.mutt/cache/headers
set message_cachedir=~/.mutt/cache/bodies
set certificate_file=~/.mutt/certificates
set query_command="goobook query '%s'"
# }}

# View settings {{
set include
set sort = threads
set sort_aux = last-date-received
set sort_re
set auto_tag = yes
set mailcap_path = ~/.mutt/mailcap
hdr_order Date From To Cc
alternative_order text/plain text/html *
auto_view text/html
set status_on_top
#set pager_index_lines = 8
#set pager_context = 5
#set pager_stop
set menu_scroll
set smart_wrap
set tilde
unset markers
# }}

# Composing {{
set fcc_attach
set edit_headers = yes
unset mime_forward
set forward_format = "Fwd: %s"
set include
set forward_quote
# }}

# PGP {{
set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"
set pgp_decrypt_command="gpg --passphrase-fd 0 --no-verbose --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust --encrypt-to 0xFC29BDCDF15F5BE8 -- -r %r -- %f"
set pgp_encrypt_sign_command="pgpewrap gpg --passphrase-fd 0 --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0xFC29BDCDF15F5BE8 -- -r %r -- %f"
set pgp_import_command="gpg --no-verbose --import -v %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r"
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r"
set pgp_autosign=yes
set pgp_sign_as=0xAD2003ED
set pgp_replyencrypt=yes
set pgp_timeout=1800
set pgp_good_sign="^gpg: Good signature from"
# }}

# Keybindings {{
bind editor <Tab> complete-query
bind editor ^T complete
bind editor <space> noop
macro compose v "<enter-command>source ~/.mutt/switch_to_penyopal<enter>" "Toggle from address"
# Notmuch shortcuts {{
 macro index <F8> \
       "<enter-command>unset wait_key<enter><shell-escape>notmuch-mutt --prompt search<enter><change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>" \
       "notmuch: search mail"
 macro index <F9> \
       "<enter-command>unset wait_key<enter><pipe-message>notmuch-mutt thread<enter><change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter><enter-command>set wait_key<enter>" \
       "notmuch: reconstruct thread"
 macro index <F6> \
       "<enter-command>unset wait_key<enter><pipe-message>notmuch-mutt tag -- -inbox<enter>" \
       "notmuch: remove message from inbox"
# }}
# Gmail-style keyboard shortcuts {{
macro index,pager gi "<change-folder>=INBOX<enter>" "Go to inbox"
macro index,pager ga "<change-folder>=[Gmail].All Mail<enter>" "Go to all mail"
macro index,pager gs "<change-folder>=[Gmail].Starred<enter>" "Go to starred messages"
macro index,pager gd "<change-folder>=[Gmail].Drafts<enter>" "Go to drafts"
macro index,pager \cb "|urlview\n" "Open url with 'open'"
# }}
# }}

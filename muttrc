# A basic .muttrc for use with Gmail
# vim: set foldmethod=marker foldmarker={{,}} :

# Paths {{
set alias_file = ~/.mutt/aliases
set header_cache = ~/.mutt/cache/headers
set message_cachedir = ~/.mutt/cache/bodies
set certificate_file = ~/.mutt/certificates
set mailcap_path = ~/.mutt/mailcap
set tmpdir = ~/.mutt/temp
set signature = ~/.mutt/sig
set mailcap_path = ~/.mutt/mailcap
# }}

# Basic settings {{
source ~/.vim/bundle/badwolf/contrib/badwolf.muttrc

set editor = "nvim -c 'normal! G{' -c 'redraw'"
set query_command = "~/.mutt/search_contacts.py '%s'"
set wait_key = no
set timeout = 3
set mail_check = 0
unset move
set delete
unset mark_old
set beep_new
set pipe_decode
set thorough_search
# }}

# Status bar {{
set status_chars = " *%A"
set status_format = "───[ Folder: %f ]───[%r%m messages%?n? (%n new)?%?d? (%d to delete)?%?t? (%t tagged)? ]───%>─%?p?( %p postponed )?───"
# }}

# Mailbox settings {{
set mbox_type = Maildir
set folder = "~/Maildir"
set mask = "!^\\.[^.]"
set mbox = "+[Gmail]/All Mail"
set spoolfile = "+INBOX"
set postponed = "+[Gmail].Drafts"
set record = "+[Gmail].Sent Mail"
mailboxes +INBOX
# }}

# Sending mail settings {{
set sendmail = "/usr/local/bin/msmtp -a gmail"
set sendmail_wait = 0
# }}

# Index View settings {{
set date_format = "%d/%m"
set index_format = "[%Z]  %d   %-20.20F  %s"
set sort = threads
set sort_aux = last-date-received
set sort_re
set reply_regexp ="(([Rr][Ee]?(\[[0-9]\])?: *)?(\[[^]]+\] *)?)*"
set uncollapse_jump
set status_on_top
# }}

# Pager view options {{
set pager_index_lines = 10
set pager_context = 3
set pager_stop
set menu_scroll
set smart_wrap
set tilde
unset markers
set auto_tag = yes
hdr_order Date From To Cc
alternative_order text/plain text/enriched text/html *
auto_view text/html
# }}

# Composing {{
set realname = "James N. V. Cash"
set envelope_from
set sig_dashes
set edit_headers
set fast_reply
set askcc
set include
set fcc_attach
unset mime_forward
set forward_format = "Fwd: %s"
set forward_decode
set forward_quote
set attribution = "On %d, %n wrote:"
set reply_to
set reverse_name

set from = "james.cash@occasionallycogent.com"
alternates james\.nvc@gmail\.com james@penyopal\.com james\.cash@(.*\.)?utoronto\.ca cashjame@ecf\.utoronto\.ca
# }}

# Headers {{
ignore *
unignore from: to: cc: date: subject:
hdr_order from: to: date: subject:
# }}

# PGP {{
set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"
set pgp_decrypt_command="gpg --passphrase-fd 0 --no-verbose --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust --encrypt-to 0x8DC9A386 -- -r %r -- %f"
set pgp_encrypt_sign_command="pgpewrap gpg --passphrase-fd 0 --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0x8DC9A386 -- -r %r -- %f"
set pgp_import_command="gpg --no-verbose --import -v %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r"
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r"
set pgp_autosign=yes
set pgp_sign_as=0x8DC9A386
set pgp_replyencrypt=yes
set pgp_timeout=1800
set pgp_good_sign="^gpg: Good signature from"
# }}

# Keybindings {{
# Editor {{
bind editor <Tab> complete-query
bind editor ^T complete
bind editor <space> noop
# }}
# Index & pager {{
bind index,pager R group-reply
bind index,pager k previous-entry
bind index,pager j next-entry
bind index gg first-entry
bind index  G last-entry
macro index,pager \Cu "|urlview<enter>" "Open url with urlview"
macro index,pager s "<pipe-message>cat > ~/tmp/" "Save message as"
bind index <tab> sync-mailbox
bind index p recall-message
bind index <space> collapse-thread
macro index \Cr "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all messages as read"
macro index \CR "T~U<enter><tag-prefix><clear-flag>N<set-flag>D<untag-pattern>.<enter>" "mark all messages as read and archive"
macro index <esc>f ":set date_format = \"%d/%m\"<enter>" "short date format"
macro index <esc>F ":set date_format = \"%d/%m at %I:%M %P\"<enter>" "short date format"
macro index a "<limit>all<enter>" "show all messages (undo limit)"
macro index,pager V "|vim -c 'setlocal ft=mail' -c 'setlocal buftype=nofile' -<enter>" "open in vim"
# Notmuch shortcuts {{
  macro index S "<enter-command>unset wait_key<enter><shell-escape>mutt-notmuch-py ~/Maildir/temporary/search<enter><change-folder-readonly>+temporary/search<enter>" "search mail (using notmuch)"
 macro index <F8> \
       "<enter-command>unset wait_key<enter><shell-escape>notmuch-mutt --prompt search<enter><change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>" \
       "notmuch: search mail"
 macro index <F9> \
       "<enter-command>unset wait_key<enter><pipe-message>notmuch-mutt thread<enter><change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter><enter-command>set wait_key<enter>" \
       "notmuch: reconstruct thread"
 macro index <F6> \
       "<enter-command>unset wait_key<enter><pipe-message>notmuch-mutt tag -- -inbox<enter>" \
       "notmuch: remove message from inbox"
macro index / \
      "<enter-command>unset wait_key<enter><shell-escape>read -p 'notmuch query: ' x; echo \$x >~/.cache/mutt_terms<enter><limit>~i \"\`notmuch search --output=messages \$(cat ~/.cache/mutt_terms) | head -n 600 | tr '+' '.' | perl -le '@a=<>;chomp@a;s/\^id:// for@a;$,=\"|\";print@a'\`\"<enter>" \
      "show only messages matching a notmuch pattern"

# }}
# Sync mail
macro index O "<shell-escape>mailrun.sh<enter>" "Force a mailrun"
macro index o "<shell-escape>mailrun.sh inboxonly<enter>" "Force a mailrun"
# }}
# Compose {{
macro compose v "<enter-command>source ~/.mutt/switch_to_penyopal<enter>" "Toggle from address"
bind compose p postpone-message
# }}
bind attach <return> view-mailcap
# Gmail-style keyboard shortcuts {{
macro index,pager gi "<change-folder>=INBOX<enter>" "Go to inbox"
macro index,pager ga "<change-folder>=[Gmail].All Mail<enter>" "Go to all mail"
macro index,pager gs "<change-folder>=[Gmail].Starred<enter>" "Go to starred messages"
macro index,pager gd "<change-folder>=[Gmail].Drafts<enter>" "Go to drafts"
# }}
# }}
